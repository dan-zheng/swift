// RUN: %target-run-simple-swiftgyb
// REQUIRES: executable_test

import StdlibUnittest

var FloatingPointDerivativeTests = TestSuite("FloatingPointDerivatives")

%for op in ['derivative', 'gradient']:
%for Self in ['Float', 'Double', 'Float80']:

%if Self == 'Float80':
#if !os(Windows) && (arch(i386) || arch(x86_64))
%end

FloatingPointDerivativeTests.test("${Self}.squareRoot ${op}") {
  expectEqual(${Self}(0.5), ${op}(at: ${Self}(1), in: { $0.squareRoot() }))
  expectEqual(${Self}(0.25), ${op}(at: ${Self}(4), in: { $0.squareRoot() }))
}

// Differential operator specific tests.

FloatingPointDerivativeTests.test("${Self}.addingProduct ${op}") {
%if op == 'gradient':
  expectEqual((1, 2, 3), ${op}(at: ${Self}(10), ${Self}(3), ${Self}(2), in: { $0.addingProduct($1, $2) }))
%else: # if op == 'derivative'
%end
}

%if Self == 'Float80':
#endif
%end
%end # for Self in ['Float', 'Double', 'Float80']:
%end # for op in ['derivative', 'gradient']:

runAllTests()
